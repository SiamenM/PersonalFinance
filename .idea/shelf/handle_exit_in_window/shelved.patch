Index: src/main/code/financeException/ModelException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package financeException;\r\n\r\n\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.Stage;\r\nimport settings.Text;\r\n\r\npublic class ModelException extends Exception {\r\n\r\n    public static final int TITLE_EMPTY = 1;\r\n    public static final int IS_EXITS = 2;\r\n    public static final int DATE_FORMAT = 3;\r\n    public static final int CODE_EMPTY = 4;\r\n    public static final int CURRENCY_EMPTY = 5;\r\n    public static final int ARTICLE_EMPTY = 6;\r\n    public static final int ACCOUNT_EMPTY = 7;\r\n    public static final int RATE_INCORRECT = 8;\r\n    public static final int AMOUNT_FORMAT = 9;\r\n    public static final int NO_BASE_CURRENCY = 10;\r\n    public static final int COMMON_NOT_FOUND = 11;\r\n    public static final int ERROR_UPDATE_CURRENCIES = 12;\r\n\r\n    private final int code;\r\n\r\n    public ModelException(int code) {\r\n        this.code = code;\r\n    }\r\n\r\n    public String getMessage() {\r\n        switch (code) {\r\n            case TITLE_EMPTY:\r\n                return settings.Text.get(\"ERROR_TITLE_EMPTY\");\r\n            case IS_EXITS:\r\n                return settings.Text.get(\"ERROR_IS_EXITS\");\r\n            case DATE_FORMAT:\r\n                return settings.Text.get(\"ERROR_DATE_FORMAT\");\r\n            case CODE_EMPTY:\r\n                return settings.Text.get(\"ERROR_CODE_EMPTY\");\r\n            case CURRENCY_EMPTY:\r\n                return settings.Text.get(\"ERROR_CURRENCY_EMPTY\");\r\n            case ARTICLE_EMPTY:\r\n                return settings.Text.get(\"ERROR_ARTICLE_EMPTY\");\r\n            case ACCOUNT_EMPTY:\r\n                return settings.Text.get(\"ERROR_ACCOUNT_EMPTY\");\r\n            case RATE_INCORRECT:\r\n                return settings.Text.get(\"ERROR_RATE_INCORRECT\");\r\n            case AMOUNT_FORMAT:\r\n                return settings.Text.get(\"ERROR_AMOUNT_FORMAT\");\r\n            case NO_BASE_CURRENCY:\r\n                return settings.Text.get(\"ERROR_NO_BASE_CURRENCY\");\r\n            case COMMON_NOT_FOUND:\r\n                return settings.Text.get(\"COMMON_NOT_FOUND\");\r\n            case ERROR_UPDATE_CURRENCIES:\r\n                return settings.Text.get(\"ERROR_UPDATE_CURRENCIES\");\r\n        }\r\n        return \"\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/code/financeException/ModelException.java	(date 1582114581000)
+++ src/main/code/financeException/ModelException.java	(date 1582541173426)
@@ -1,11 +1,6 @@
 package financeException;
 
 
-import javafx.scene.control.Alert;
-import javafx.scene.image.Image;
-import javafx.stage.Stage;
-import settings.Text;
-
 public class ModelException extends Exception {
 
     public static final int TITLE_EMPTY = 1;
@@ -30,29 +25,29 @@
     public String getMessage() {
         switch (code) {
             case TITLE_EMPTY:
-                return settings.Text.get("ERROR_TITLE_EMPTY");
+                return "ERROR_TITLE_EMPTY";
             case IS_EXITS:
-                return settings.Text.get("ERROR_IS_EXITS");
+                return "ERROR_IS_EXITS";
             case DATE_FORMAT:
-                return settings.Text.get("ERROR_DATE_FORMAT");
+                return "ERROR_DATE_FORMAT";
             case CODE_EMPTY:
-                return settings.Text.get("ERROR_CODE_EMPTY");
+                return "ERROR_CODE_EMPTY";
             case CURRENCY_EMPTY:
-                return settings.Text.get("ERROR_CURRENCY_EMPTY");
+                return "ERROR_CURRENCY_EMPTY";
             case ARTICLE_EMPTY:
-                return settings.Text.get("ERROR_ARTICLE_EMPTY");
+                return "ERROR_ARTICLE_EMPTY";
             case ACCOUNT_EMPTY:
-                return settings.Text.get("ERROR_ACCOUNT_EMPTY");
+                return "ERROR_ACCOUNT_EMPTY";
             case RATE_INCORRECT:
-                return settings.Text.get("ERROR_RATE_INCORRECT");
+                return "ERROR_RATE_INCORRECT";
             case AMOUNT_FORMAT:
-                return settings.Text.get("ERROR_AMOUNT_FORMAT");
+                return "ERROR_AMOUNT_FORMAT";
             case NO_BASE_CURRENCY:
-                return settings.Text.get("ERROR_NO_BASE_CURRENCY");
+                return "ERROR_NO_BASE_CURRENCY";
             case COMMON_NOT_FOUND:
-                return settings.Text.get("COMMON_NOT_FOUND");
+                return "COMMON_NOT_FOUND";
             case ERROR_UPDATE_CURRENCIES:
-                return settings.Text.get("ERROR_UPDATE_CURRENCIES");
+                return "ERROR_UPDATE_CURRENCIES";
         }
         return "";
     }
